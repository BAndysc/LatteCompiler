//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Latte.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LatteAntlr {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILatteListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class LatteBaseListener : ILatteListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LatteParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] LatteParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LatteParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] LatteParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionDef</c>
	/// labeled alternative in <see cref="LatteParser.topDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDef([NotNull] LatteParser.FunctionDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionDef</c>
	/// labeled alternative in <see cref="LatteParser.topDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDef([NotNull] LatteParser.FunctionDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>classDef</c>
	/// labeled alternative in <see cref="LatteParser.topDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDef([NotNull] LatteParser.ClassDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>classDef</c>
	/// labeled alternative in <see cref="LatteParser.topDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDef([NotNull] LatteParser.ClassDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LatteParser.fieldOrMethodDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldOrMethodDef([NotNull] LatteParser.FieldOrMethodDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LatteParser.fieldOrMethodDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldOrMethodDef([NotNull] LatteParser.FieldOrMethodDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LatteParser.fieldDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldDef([NotNull] LatteParser.FieldDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LatteParser.fieldDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldDef([NotNull] LatteParser.FieldDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LatteParser.methodDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDef([NotNull] LatteParser.MethodDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LatteParser.methodDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDef([NotNull] LatteParser.MethodDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LatteParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg([NotNull] LatteParser.ArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LatteParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg([NotNull] LatteParser.ArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LatteParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] LatteParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LatteParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] LatteParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Empty</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmpty([NotNull] LatteParser.EmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Empty</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmpty([NotNull] LatteParser.EmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BlockStmt</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStmt([NotNull] LatteParser.BlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BlockStmt</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStmt([NotNull] LatteParser.BlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Decl</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecl([NotNull] LatteParser.DeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Decl</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecl([NotNull] LatteParser.DeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Ass</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAss([NotNull] LatteParser.AssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Ass</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAss([NotNull] LatteParser.AssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StructAss</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructAss([NotNull] LatteParser.StructAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StructAss</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructAss([NotNull] LatteParser.StructAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Incr</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncr([NotNull] LatteParser.IncrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Incr</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncr([NotNull] LatteParser.IncrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Decr</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecr([NotNull] LatteParser.DecrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Decr</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecr([NotNull] LatteParser.DecrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StructIncr</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructIncr([NotNull] LatteParser.StructIncrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StructIncr</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructIncr([NotNull] LatteParser.StructIncrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StructDecr</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDecr([NotNull] LatteParser.StructDecrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StructDecr</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDecr([NotNull] LatteParser.StructDecrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Ret</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRet([NotNull] LatteParser.RetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Ret</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRet([NotNull] LatteParser.RetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VRet</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVRet([NotNull] LatteParser.VRetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VRet</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVRet([NotNull] LatteParser.VRetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Cond</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCond([NotNull] LatteParser.CondContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Cond</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCond([NotNull] LatteParser.CondContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CondElse</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondElse([NotNull] LatteParser.CondElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CondElse</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondElse([NotNull] LatteParser.CondElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>While</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile([NotNull] LatteParser.WhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>While</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile([NotNull] LatteParser.WhileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SExp</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSExp([NotNull] LatteParser.SExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SExp</c>
	/// labeled alternative in <see cref="LatteParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSExp([NotNull] LatteParser.SExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TTypeName</c>
	/// labeled alternative in <see cref="LatteParser.type_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTTypeName([NotNull] LatteParser.TTypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TTypeName</c>
	/// labeled alternative in <see cref="LatteParser.type_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTTypeName([NotNull] LatteParser.TTypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LatteParser.item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterItem([NotNull] LatteParser.ItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LatteParser.item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitItem([NotNull] LatteParser.ItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EId</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEId([NotNull] LatteParser.EIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EId</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEId([NotNull] LatteParser.EIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EFunCall</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEFunCall([NotNull] LatteParser.EFunCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EFunCall</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEFunCall([NotNull] LatteParser.EFunCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ERelOp</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterERelOp([NotNull] LatteParser.ERelOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ERelOp</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitERelOp([NotNull] LatteParser.ERelOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ETrue</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterETrue([NotNull] LatteParser.ETrueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ETrue</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitETrue([NotNull] LatteParser.ETrueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ECast</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterECast([NotNull] LatteParser.ECastContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ECast</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitECast([NotNull] LatteParser.ECastContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EOr</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEOr([NotNull] LatteParser.EOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EOr</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEOr([NotNull] LatteParser.EOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EInt</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEInt([NotNull] LatteParser.EIntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EInt</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEInt([NotNull] LatteParser.EIntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EUnOp</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEUnOp([NotNull] LatteParser.EUnOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EUnOp</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEUnOp([NotNull] LatteParser.EUnOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EStr</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEStr([NotNull] LatteParser.EStrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EStr</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEStr([NotNull] LatteParser.EStrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EMulOp</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEMulOp([NotNull] LatteParser.EMulOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EMulOp</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEMulOp([NotNull] LatteParser.EMulOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EAnd</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEAnd([NotNull] LatteParser.EAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EAnd</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEAnd([NotNull] LatteParser.EAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EMethodCall</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEMethodCall([NotNull] LatteParser.EMethodCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EMethodCall</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEMethodCall([NotNull] LatteParser.EMethodCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EObjectField</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEObjectField([NotNull] LatteParser.EObjectFieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EObjectField</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEObjectField([NotNull] LatteParser.EObjectFieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EParen</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEParen([NotNull] LatteParser.EParenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EParen</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEParen([NotNull] LatteParser.EParenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EFalse</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEFalse([NotNull] LatteParser.EFalseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EFalse</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEFalse([NotNull] LatteParser.EFalseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EAddOp</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEAddOp([NotNull] LatteParser.EAddOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EAddOp</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEAddOp([NotNull] LatteParser.EAddOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ENull</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterENull([NotNull] LatteParser.ENullContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ENull</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitENull([NotNull] LatteParser.ENullContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ENewObject</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterENewObject([NotNull] LatteParser.ENewObjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ENewObject</c>
	/// labeled alternative in <see cref="LatteParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitENewObject([NotNull] LatteParser.ENewObjectContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryMinus</c>
	/// labeled alternative in <see cref="LatteParser.unOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryMinus([NotNull] LatteParser.UnaryMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryMinus</c>
	/// labeled alternative in <see cref="LatteParser.unOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryMinus([NotNull] LatteParser.UnaryMinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryNeg</c>
	/// labeled alternative in <see cref="LatteParser.unOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryNeg([NotNull] LatteParser.UnaryNegContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryNeg</c>
	/// labeled alternative in <see cref="LatteParser.unOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryNeg([NotNull] LatteParser.UnaryNegContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="LatteParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlus([NotNull] LatteParser.PlusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="LatteParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlus([NotNull] LatteParser.PlusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="LatteParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinus([NotNull] LatteParser.MinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="LatteParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinus([NotNull] LatteParser.MinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Multiply</c>
	/// labeled alternative in <see cref="LatteParser.mulOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiply([NotNull] LatteParser.MultiplyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Multiply</c>
	/// labeled alternative in <see cref="LatteParser.mulOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiply([NotNull] LatteParser.MultiplyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Divide</c>
	/// labeled alternative in <see cref="LatteParser.mulOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivide([NotNull] LatteParser.DivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Divide</c>
	/// labeled alternative in <see cref="LatteParser.mulOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivide([NotNull] LatteParser.DivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="LatteParser.mulOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModulo([NotNull] LatteParser.ModuloContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="LatteParser.mulOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModulo([NotNull] LatteParser.ModuloContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LessThan</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLessThan([NotNull] LatteParser.LessThanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LessThan</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLessThan([NotNull] LatteParser.LessThanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LessEquals</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLessEquals([NotNull] LatteParser.LessEqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LessEquals</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLessEquals([NotNull] LatteParser.LessEqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>GreaterThan</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGreaterThan([NotNull] LatteParser.GreaterThanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GreaterThan</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGreaterThan([NotNull] LatteParser.GreaterThanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>GreaterEquals</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGreaterEquals([NotNull] LatteParser.GreaterEqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GreaterEquals</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGreaterEquals([NotNull] LatteParser.GreaterEqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Equals</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquals([NotNull] LatteParser.EqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Equals</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquals([NotNull] LatteParser.EqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NotEquals</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotEquals([NotNull] LatteParser.NotEqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NotEquals</c>
	/// labeled alternative in <see cref="LatteParser.relOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotEquals([NotNull] LatteParser.NotEqualsContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace LatteAntlr
